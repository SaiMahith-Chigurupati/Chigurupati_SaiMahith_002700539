/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.HospitalDirectory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author mahith
 */
public class DoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorJPanel
     */
    
    PatientDirectory patientDirectory;
    PersonDirectory personDirectory;
    DoctorDirectory doctorDirectory;
    EncounterHistory encounterHistory;
    HospitalDirectory hospitalDirectory;
    Person doctor;
    String selectedPatient;
    String selectedEncounterDate;
    String com;
    
    JSplitPane splitPane;
    
    public DoctorJPanel(Person person, PersonDirectory personDirectory,PatientDirectory patientDirectory, DoctorDirectory doctorDirectory,EncounterHistory encounterHistory,HospitalDirectory hospitalDirectory, JSplitPane splitPane){
        initComponents();
        this.doctor = person;
        this.patientDirectory=patientDirectory;
        this.personDirectory=personDirectory;
        this.doctorDirectory =doctorDirectory;
        this.encounterHistory = encounterHistory;
        this.hospitalDirectory = hospitalDirectory;
        this.splitPane = splitPane;
                
        lblDoctor.setText("Welcome Dr. "+doctor.getFirstName());
        
        encounterPanel.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDoctor = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        encounterPanel = new javax.swing.JPanel();
        lblBP = new javax.swing.JLabel();
        txtSystole = new javax.swing.JTextField();
        lblSystole = new javax.swing.JLabel();
        lblDiastole = new javax.swing.JLabel();
        txtDiastole = new javax.swing.JTextField();
        lblDiabetes = new javax.swing.JLabel();
        lblPreDiet = new javax.swing.JLabel();
        txtPreDiet = new javax.swing.JTextField();
        lblPostDiet = new javax.swing.JLabel();
        txtPostDiet = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        lblComments = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnCreatePatient = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        lblDoctor.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        lblDoctor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblSearch.setText("Search Patient");

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Patient"
            }
        ));
        tblPatients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatients);

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Encounter"
            }
        ));
        tblEncounters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEncountersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEncounters);

        lblBP.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblBP.setText("BP:");

        lblSystole.setText("Systole");

        lblDiastole.setText("Diastole");

        lblDiabetes.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblDiabetes.setText("Diabetes:");

        lblPreDiet.setText("Pre Diet");

        lblPostDiet.setText("Post Diet");

        txtComments.setColumns(20);
        txtComments.setRows(5);
        jScrollPane3.setViewportView(txtComments);

        lblComments.setText("Comments");

        lblHeartRate.setText("Heart Rate");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encounterPanelLayout = new javax.swing.GroupLayout(encounterPanel);
        encounterPanel.setLayout(encounterPanelLayout);
        encounterPanelLayout.setHorizontalGroup(
            encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encounterPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(encounterPanelLayout.createSequentialGroup()
                        .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPreDiet)
                            .addComponent(lblComments)
                            .addComponent(lblHeartRate)
                            .addComponent(lblSystole)
                            .addComponent(lblBP, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(encounterPanelLayout.createSequentialGroup()
                                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPreDiet, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(encounterPanelLayout.createSequentialGroup()
                                        .addComponent(txtSystole, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDiastole)
                                            .addComponent(lblPostDiet))))
                                .addGap(18, 18, 18)
                                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDiastole, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtPostDiet, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)))))
                    .addComponent(lblDiabetes))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encounterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(206, 206, 206))
        );
        encounterPanelLayout.setVerticalGroup(
            encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encounterPanelLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(lblBP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encounterPanelLayout.createSequentialGroup()
                        .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSystole)
                            .addComponent(txtSystole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiastole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDiastole))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDiabetes)
                        .addGap(18, 18, 18)
                        .addComponent(lblPreDiet)
                        .addGap(18, 18, 18)
                        .addComponent(lblHeartRate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encounterPanelLayout.createSequentialGroup()
                        .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPreDiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPostDiet)
                            .addComponent(txtPostDiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblComments))
                .addGap(18, 18, 18)
                .addComponent(btnCreate)
                .addContainerGap())
        );

        btnCreatePatient.setText("Create Encounter");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnLogOut.setText("Logout");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSearch)
                        .addGap(27, 27, 27)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(encounterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreatePatient)
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnLogOut)
                .addGap(18, 18, 18)
                .addComponent(lblDoctor)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnCreatePatient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(encounterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchText = txtSearch.getText();
        
        ArrayList<Patient> patientList =  patientDirectory.searchPatient(searchText);
        
        if(patientList.isEmpty()){
            JOptionPane.showMessageDialog(this, "No Results Found!");

        }else{
            
            populateSearchResults(patientList);
           
            txtSystole.setText("");
            txtDiastole.setText("");
            txtPreDiet.setText("");
            txtPostDiet.setText("");
            txtHeartRate.setText("");
            txtComments.setText("");
            
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            model.setRowCount(0);
            
            
        }
        encounterPanel.setVisible(false);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        btnCreate.setVisible(true);
        if(selectedPatient!=null){
            encounterPanel.setVisible(true);
        
            txtSystole.setText("");
            txtDiastole.setText("");
            txtPreDiet.setText("");
            txtPostDiet.setText("");
            txtHeartRate.setText("");
            txtComments.setText("");
            
            txtSystole.setEditable(true);
            txtDiastole.setEditable(true);
            txtPreDiet.setEditable(true);
            txtPostDiet.setEditable(true);
            txtHeartRate.setEditable(true);
            txtComments.setEditable(true);
        }else{
            JOptionPane.showMessageDialog(this, "Please choose a Patient");
        }
        

    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        LoginJPanel login = new LoginJPanel(personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory,splitPane);
        splitPane.setRightComponent(login);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
            
        
            Encounter encounter = encounterHistory.getEncounter(selectedEncounterDate);
            try{
                com  = encounter.getComments();
            }catch(Exception e){
                com = null;
            }
            if(com!=" " || encounter == null){
                encounter = encounterHistory.addEncounter();
                //get todays date
                LocalDate today = java.time.LocalDate.now();
                encounter.setEncounterDate(today.toString());
            }

            encounter.setDoctorName(doctor.getFirstName());
            encounter.setUserID(personDirectory.getUserID(selectedPatient));
            encounter.setSystole(Integer.valueOf(txtSystole.getText()));
            encounter.setDiastole(Integer.valueOf(txtDiastole.getText()));
            encounter.setHeartRate(Integer.valueOf(txtHeartRate.getText()));
            encounter.setPreDiet(Integer.valueOf(txtPreDiet.getText()));
            encounter.setPostDiet(Integer.valueOf(txtPostDiet.getText()));
            encounter.setComments(txtComments.getText());

            JOptionPane.showMessageDialog(this, "Details added");

            txtSystole.setText("");
            txtDiastole.setText("");
            txtPreDiet.setText("");
            txtPostDiet.setText("");
            txtHeartRate.setText("");
            txtComments.setText("");

            encounterPanel.setVisible(false);
            tblPatientsMouseClicked(null);
        
  
    }//GEN-LAST:event_btnCreateActionPerformed

    private void tblPatientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientsMouseClicked
        // TODO add your handling code here:
        
        int selectedRowIndex  = tblPatients.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a Row to View");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        selectedPatient = (String) model.getValueAt(selectedRowIndex,0);
        
        ArrayList<Encounter> encounterList =  encounterHistory.searchEncounter(doctor.getFirstName(),personDirectory.getUserID(selectedPatient));
        populateEncounterResults(encounterList);

    }//GEN-LAST:event_tblPatientsMouseClicked

    private void tblEncountersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEncountersMouseClicked
        // TODO add your handling code here:
        
        int selectedRowIndex  = tblEncounters.getSelectedRow();
        
        btnCreate.setVisible(false);
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a Row to View");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        selectedEncounterDate = (String) model.getValueAt(selectedRowIndex,0);
        encounterPanel.setVisible(true);
        Encounter encounter =  encounterHistory.getEncounter(selectedEncounterDate);
        
        if(encounter.getComments()==" "){
            encounterPanel.setVisible(false);
            JOptionPane.showMessageDialog(this,"No Vitals to view! Please Create");
            
    
        }
        txtSystole.setText(String.valueOf(encounter.getSystole()));
        txtDiastole.setText(String.valueOf(encounter.getDiastole()));
        txtPreDiet.setText(String.valueOf(encounter.getPreDiet()));
        txtPostDiet.setText(String.valueOf(encounter.getPostDiet()));
        txtHeartRate.setText(String.valueOf(encounter.getHeartRate()));
        txtComments.setText(encounter.getComments());
        
        txtSystole.setEditable(false);
        txtDiastole.setEditable(false);
        txtPreDiet.setEditable(false);
        txtPostDiet.setEditable(false);
        txtHeartRate.setEditable(false);
        txtComments.setEditable(false);
    }//GEN-LAST:event_tblEncountersMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel encounterPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblDiabetes;
    private javax.swing.JLabel lblDiastole;
    private javax.swing.JLabel lblDoctor;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblPostDiet;
    private javax.swing.JLabel lblPreDiet;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSystole;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTable tblPatients;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextField txtDiastole;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtPostDiet;
    private javax.swing.JTextField txtPreDiet;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSystole;
    // End of variables declaration//GEN-END:variables

    private void populateSearchResults(ArrayList<Patient> patientDirectory){
        //this function is used to populate the items matching the search content
        
        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        model.setRowCount(0);
        
        for(Patient patient: patientDirectory){
            
            Object[] Row =new Object[1];
            Row[0] = patient.getFirstName();
            
            model.addRow(Row);
        }
    }
    
    private void populateEncounterResults(ArrayList<Encounter> encounterList){
        //this function is used to populate the items matching the search content
        
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        model.setRowCount(0);
        
        for(Encounter encounter: encounterList){
            
            Object[] Row =new Object[1];
            Row[0] = encounter.getEncounterDate();
            
            model.addRow(Row);
        }
    }


}
