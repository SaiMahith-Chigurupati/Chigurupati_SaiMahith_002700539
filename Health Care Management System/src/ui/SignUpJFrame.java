/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.CityDirectory;
import model.CommunityDirectory;
import model.Doctor;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.HospitalDirectory;
import model.HouseDirectory;
import model.Patient;
import model.Person;
import model.PersonDirectory;
import model.PatientDirectory;

/**
 *
 * @author mahith
 */
public class SignUpJFrame extends javax.swing.JPanel {

    /**
     * Creates new form SignUpJFrame
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    DoctorDirectory doctorDirectory;
    HospitalDirectory hospitalDirectory;
    Person person;
    EncounterHistory encounterHistory;
    JSplitPane splitPane;
    HouseDirectory houseDirectory;
    CommunityDirectory communityDirectory;
    CityDirectory cityDirectory;
    
    String hospital;
    String specialization;
    int height;
    int weight;
    int age;
    
    
    public SignUpJFrame(Person person,PersonDirectory personDirectory,PatientDirectory patientDirectory, DoctorDirectory doctorDirectory, EncounterHistory encounterHistory,HospitalDirectory hospitalDirectory,HouseDirectory houseDirectory,CommunityDirectory communityDirectory, CityDirectory cityDirectory,JSplitPane splitPane) {
        initComponents();
        
        this.splitPane = splitPane;
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.doctorDirectory = doctorDirectory;
        this.encounterHistory = encounterHistory;
        this.hospitalDirectory = hospitalDirectory;
        this.communityDirectory = communityDirectory;
        this.cityDirectory = cityDirectory;
        this.houseDirectory = houseDirectory;
        this.person = person;
        
        btnSignIn.setVisible(false);
        doctorJPanel.setVisible(false);
        patientJPanel.setVisible(false);
        
        if(person==null){
            btnSignIn.setVisible(true);
            btnBack.setVisible(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateAccount = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblRole = new javax.swing.JLabel();
        chRole = new javax.swing.JComboBox<>();
        lblUserID = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        fldPassword = new javax.swing.JPasswordField();
        fldRetype = new javax.swing.JPasswordField();
        lblRetype = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblMobile = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        chDateOfBirth = new com.toedter.calendar.JDateChooser();
        lblDateOfBirth = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        lblGender = new javax.swing.JLabel();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        doctorJPanel = new javax.swing.JPanel();
        lblHospital = new javax.swing.JLabel();
        txtHospital = new javax.swing.JTextField();
        lblSpecialization = new javax.swing.JLabel();
        txtSpecialization = new javax.swing.JTextField();
        patientJPanel = new javax.swing.JPanel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        btnSignIn = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtCommunity = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCreateAccount.setBackground(new java.awt.Color(204, 204, 255));
        lblCreateAccount.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        lblCreateAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount.setText("Create Account");
        add(lblCreateAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 62, 800, -1));

        lblFirstName.setText("First Name*");
        add(lblFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 149, -1, -1));

        txtFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFirstNameFocusLost(evt);
            }
        });
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 146, 160, -1));

        lblLastName.setText("Last Name*");
        add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 149, -1, -1));
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 146, 160, -1));

        lblRole.setText("Role*");
        add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 187, -1, -1));

        chRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "Doctor", "Patient" }));
        chRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRoleActionPerformed(evt);
            }
        });
        add(chRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 187, 160, -1));

        lblUserID.setText("User ID*");
        add(lblUserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 193, -1, -1));
        add(txtUserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 187, 160, -1));

        lblPassword.setText("Password*");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 230, -1, -1));

        fldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldPasswordFocusLost(evt);
            }
        });
        add(fldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 227, 160, -1));

        fldRetype.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldRetypeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldRetypeFocusLost(evt);
            }
        });
        add(fldRetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 227, 160, -1));

        lblRetype.setText("Re-type Password*");
        add(lblRetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(438, 230, -1, -1));

        lblEmail.setText("Email*");
        add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 268, -1, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 268, 160, -1));

        lblMobile.setText("Mobile");
        add(lblMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 271, 106, -1));
        add(txtMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 268, 160, -1));

        chDateOfBirth.setMaxSelectableDate(new java.util.Date(1672552868000L));
        chDateOfBirth.setMinSelectableDate(new java.util.Date(-62135747932000L));
        add(chDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 309, 160, -1));

        lblDateOfBirth.setText("Date of Birth*");
        add(lblDateOfBirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 309, -1, -1));

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 549, -1, -1));

        lblGender.setText("Gender*");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 311, 106, -1));

        rdMale.setText("Male");
        add(rdMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 309, -1, -1));

        rdFemale.setText("Female");
        add(rdFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 309, -1, -1));

        doctorJPanel.setBackground(new java.awt.Color(204, 204, 255));
        doctorJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHospital.setText("Hospital*");
        doctorJPanel.add(lblHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 3, -1, -1));
        doctorJPanel.add(txtHospital, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 0, 160, -1));

        lblSpecialization.setText("Specialization*");
        doctorJPanel.add(lblSpecialization, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 3, -1, -1));
        doctorJPanel.add(txtSpecialization, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 6, 160, -1));

        add(doctorJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 780, -1));

        patientJPanel.setBackground(new java.awt.Color(204, 204, 255));
        patientJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAge.setText("Age*");
        patientJPanel.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 9, -1, -1));
        patientJPanel.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 6, 160, -1));

        lblWeight.setText("Weight*");
        patientJPanel.add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 60, -1, -1));
        patientJPanel.add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 57, 160, -1));

        lblHeight.setText("Height*");
        patientJPanel.add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(344, 9, -1, -1));
        patientJPanel.add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 6, 160, -1));

        add(patientJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 391, -1, -1));

        btnSignIn.setText("Sign in");
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });
        add(btnSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(658, 93, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 93, 83, -1));
        add(txtCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 160, -1));

        lblCommunity.setText("Community*");
        add(lblCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, -1, -1));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 800, 660));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        
        String fName = txtFirstName.getText();
        String lName = txtLastName.getText();
        String mobiNum = txtMobile.getText();
        String emailId = txtEmail.getText();
        String role = chRole.getSelectedItem().toString();
        
        Date dateOfBirth = chDateOfBirth.getDate();
        //String gender = JRadioButton1
        String userID = txtUserID.getText();
        String password = new String(fldPassword.getPassword());
        String reType = new String(fldRetype.getPassword());
        String community = txtCommunity.getText();
        
        if(fName.isBlank() || lName.isBlank() || mobiNum.isBlank() || emailId.isBlank() || dateOfBirth.equals("")|| userID.isBlank() || password.isBlank() || community.isBlank()){
            JOptionPane.showMessageDialog(this, "Please enter Mandatory Fields");
        }else if(!emailId.contains("@") || !emailId.contains(".com")){
            JOptionPane.showMessageDialog(this, "Please enter valid Email address");
        }else if(mobiNum.length()!=10){
             JOptionPane.showMessageDialog(this, "Please enter valid Mobile number");
        }
           
        else{
            
        if(role.equals("Patient")){
            try{
                
            height =Integer.parseInt(txtHeight.getText());
            weight = Integer.parseInt(txtWeight.getText());
            age = Integer.parseInt(txtAge.getText());
            
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Please enter Correct values in Age, height, Weight");
            }
        }
        
        
            if(password.equals(reType)){
                
                if(personDirectory.checkDuplicatePerson(userID)){
                    Person newPerson = personDirectory.addPerson();
                    newPerson.setUserID(userID);
                    newPerson.setFirstName(fName);
                    newPerson.setLastName(lName);
                    newPerson.setPassword(password);
                    newPerson.setRole(role);
                    newPerson.setDateOfBirth(dateOfBirth);
                    newPerson.setMobileNum(mobiNum);
                    newPerson.setEmailAddress(emailId);
                    newPerson.setCommunity(community);
                    
                    if(role=="Patient"){
                    Patient newPatient = patientDirectory.addPatient();

                    newPatient.setFirstName(fName);
                    newPatient.setLastName(lName);
                    newPatient.setUserID(userID);
                    newPatient.setPassword(password);
                    newPatient.setRole(role);
                    newPatient.setDateOfBirth(dateOfBirth);
                    newPatient.setMobileNum(mobiNum);
                    newPatient.setEmailAddress(emailId);
                    newPatient.setHeight(height);
                    newPatient.setWeight(weight);
                    newPatient.setAge(age);
                    newPatient.setCommunity(community);

                }else if(role.equals("Doctor")){
                    
                    hospital = txtHospital.getText();
                    specialization = txtSpecialization.getText();  
                    
                    Doctor newDoctor = doctorDirectory.addDoctor();

                    newDoctor.setFirstName(fName);
                    newDoctor.setLastName(lName);
                    newDoctor.setUserID(userID);
                    newDoctor.setPassword(password);
                    newDoctor.setRole(role);
                    newDoctor.setEmailAddress(emailId);
                    newDoctor.setSpecialization(specialization);
                    newDoctor.setHospital(hospital);
                    newDoctor.setCommunity(community);

                }
                     JOptionPane.showMessageDialog(this, "Signup Successful!");
                     
                     txtFirstName.setText("");
                     txtLastName.setText("");
                     txtEmail.setText("");
                     txtMobile.setText("");
                     chDateOfBirth.setDate(new Date());
                     chRole.setSelectedIndex(0);
                     txtCommunity.setText("");
                     fldPassword.setText("");
                     fldRetype.setText("");
                     
                     if(role.equals("Patient")){
                         txtAge.setText("");
                         txtHeight.setText("");
                         txtWeight.setText("");
                     }else if(role.equals("Doctor")){
                         txtHospital.setText("");
                         txtSpecialization.setText("");
                     }
                }else{
                    JOptionPane.showMessageDialog(this, "User with this ID already exist. Please try again!");
                }

        }else{
            
                JOptionPane.showMessageDialog(this, "Passwords didn't match");
            }
        }
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void chRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRoleActionPerformed
        // TODO add your handling code here:
        if(!txtFirstName.getText().isBlank() && (chRole.getSelectedItem().toString().equals("Doctor") || chRole.getSelectedItem().equals("Patient"))){
            txtUserID.setText(txtFirstName.getText()+"@"+chRole.getSelectedItem().toString().toLowerCase());
        }else{
            txtUserID.setText("");
        }
        
        if(chRole.getSelectedItem().toString().equals("Patient")){
            doctorJPanel.setVisible(false);
            patientJPanel.setVisible(true);
        }else if(chRole.getSelectedItem().toString().equals("Doctor")){
            patientJPanel.setVisible(false);
            doctorJPanel.setVisible(true);
        }else{
            patientJPanel.setVisible(false);
            doctorJPanel.setVisible(false);
        }
        
        
    }//GEN-LAST:event_chRoleActionPerformed

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
        if(!txtFirstName.getText().isBlank() && (chRole.getSelectedItem().toString().equals("Doctor") || chRole.getSelectedItem().equals("Patient"))){
            txtUserID.setText(txtFirstName.getText()+"@"+chRole.getSelectedItem().toString().toLowerCase());
        }else{
            txtUserID.setText("");
        }
    }//GEN-LAST:event_txtFirstNameActionPerformed

    private void fldPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldPasswordFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fldPasswordFocusGained

    private void fldPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldPasswordFocusLost
        // TODO add your handling code here:
       
    }//GEN-LAST:event_fldPasswordFocusLost

    private void fldRetypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldRetypeFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fldRetypeFocusGained

    private void fldRetypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldRetypeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fldRetypeFocusLost

    private void txtFirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstNameFocusLost
        // TODO add your handling code here:
        if(!txtFirstName.getText().isBlank() && (chRole.getSelectedItem().toString().equals("Doctor") || chRole.getSelectedItem().equals("Patient"))){
            txtUserID.setText(txtFirstName.getText()+"@"+chRole.getSelectedItem().toString().toLowerCase());
        }else{
            txtUserID.setText("");
        }
    }//GEN-LAST:event_txtFirstNameFocusLost

    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        // TODO add your handling code here:
        LoginJPanel login = new LoginJPanel(personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory,houseDirectory,communityDirectory,cityDirectory,splitPane);
        splitPane.setRightComponent(login);
    }//GEN-LAST:event_btnSignInActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //String patientName = txtFirstName.getText();
        if(person.getRole()=="Patient"){
            PatientJPanel patientPane = new PatientJPanel(person, personDirectory, patientDirectory, doctorDirectory,encounterHistory, hospitalDirectory,houseDirectory,communityDirectory,cityDirectory, splitPane);
            splitPane.setRightComponent(patientPane);
        }else if(person.getRole()=="Doctor"){
            DoctorJPanel doc = new DoctorJPanel(person,personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory,houseDirectory,communityDirectory,cityDirectory, splitPane);
            splitPane.setRightComponent(doc);
        }else if(person.getRole()=="System Admin"){
            SystemAdminPanel sysadmin = new SystemAdminPanel(person,personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory,houseDirectory,communityDirectory,cityDirectory,splitPane);
            splitPane.setRightComponent(sysadmin);
        }else if(person.getRole() == "Hospital Admin"){
            HospitalAdminPanel hpadmin = new HospitalAdminPanel(person,personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory,houseDirectory,communityDirectory,cityDirectory,splitPane);
            splitPane.setRightComponent(hpadmin);
        }
        
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnSignIn;
    private com.toedter.calendar.JDateChooser chDateOfBirth;
    private javax.swing.JComboBox<String> chRole;
    private javax.swing.JPanel doctorJPanel;
    private javax.swing.JPasswordField fldPassword;
    private javax.swing.JPasswordField fldRetype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRetype;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblSpecialization;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JPanel patientJPanel;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtSpecialization;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void saveData(){
        
    }

}
