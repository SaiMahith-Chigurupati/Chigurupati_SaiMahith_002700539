/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.util.Date;
import model.City;
import model.CityDirectory;
import model.Community;
import model.CommunityDirectory;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.House;
import model.HouseDirectory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author mahith
 */
public class HomeJFrame extends javax.swing.JFrame {

    /**
     * Creates new form HomeJFrame
     */
    
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    DoctorDirectory doctorDirectory;
    EncounterHistory encounterHistory;
    HospitalDirectory hospitalDirectory;
    CityDirectory cityDirectory;
    CommunityDirectory communityDirectory;
    HouseDirectory houseDirectory;
    
    public HomeJFrame() {
        initComponents();
        
        personDirectory = new PersonDirectory();
        patientDirectory = new PatientDirectory();
        doctorDirectory = new DoctorDirectory();
        encounterHistory = new EncounterHistory();
        hospitalDirectory = new HospitalDirectory();
        houseDirectory = new HouseDirectory();
        communityDirectory = new CommunityDirectory();
        cityDirectory = new CityDirectory();
        
        
        preDefinedData();
        
        LoginJPanel login = new LoginJPanel(personDirectory,patientDirectory,doctorDirectory,encounterHistory,hospitalDirectory, houseDirectory, communityDirectory, cityDirectory, splitJPane);
        splitJPane.setRightComponent(login);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitJPane = new javax.swing.JSplitPane();
        upperJPanel = new javax.swing.JPanel();
        lowerJPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HealthCare System");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(800, 700));

        splitJPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        upperJPanel.setPreferredSize(new java.awt.Dimension(800, 75));

        javax.swing.GroupLayout upperJPanelLayout = new javax.swing.GroupLayout(upperJPanel);
        upperJPanel.setLayout(upperJPanelLayout);
        upperJPanelLayout.setHorizontalGroup(
            upperJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        upperJPanelLayout.setVerticalGroup(
            upperJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        splitJPane.setTopComponent(upperJPanel);

        lowerJPanel.setPreferredSize(new java.awt.Dimension(800, 725));

        javax.swing.GroupLayout lowerJPanelLayout = new javax.swing.GroupLayout(lowerJPanel);
        lowerJPanel.setLayout(lowerJPanelLayout);
        lowerJPanelLayout.setHorizontalGroup(
            lowerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        lowerJPanelLayout.setVerticalGroup(
            lowerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        splitJPane.setRightComponent(lowerJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel lowerJPanel;
    private javax.swing.JSplitPane splitJPane;
    private javax.swing.JPanel upperJPanel;
    // End of variables declaration//GEN-END:variables

    public void preDefinedData(){
        Person personDoctor = personDirectory.addPerson();
        Person personPatient = personDirectory.addPerson();
        Person systemAdmin = personDirectory.addPerson();
        Person communityAdmin = personDirectory.addPerson();
        Person hospitalAdmin = personDirectory.addPerson();
        
        Patient patient = patientDirectory.addPatient();
        Doctor doctor = doctorDirectory.addDoctor();
        Hospital hospital = hospitalDirectory.addHospital();
        Hospital hospitalB = hospitalDirectory.addHospital();
        
        patient.setFirstName("Shubham");
        patient.setLastName("sapkal");
        patient.setAge(25);
        patient.setDateOfBirth(new Date(01-01-2000));
        patient.setEmailAddress("ss@gmail.com");
        patient.setHeight(100);
        patient.setWeight(100);
        patient.setMobileNum("(999)999-9999");
        patient.setUserID("shubham@patient");
        patient.setPassword("password");
        patient.setRole("Patient");
        patient.setCommunity("Roxbury");
        
        doctor.setFirstName("Aditya");
        doctor.setLastName("Kanala");
        doctor.setDateOfBirth(new Date(2000-20-12));
        doctor.setHospital("Brigham Hospital");
        doctor.setRole("Doctor");
        doctor.setMobileNum("(857)666-666");
        doctor.setUserID("aditya@doctor");
        doctor.setEmailAddress("ak@gmail.com");
        doctor.setPassword("password");
        doctor.setSpecialization("Psychologist");
        doctor.setCommunity("Roxbury");
        
        personDoctor.setFirstName("Aditya");
        personDoctor.setLastName("Kanala");
        personDoctor.setDateOfBirth(new Date(2000-20-12));
        personDoctor.setRole("Doctor");
        personDoctor.setMobileNum("(857)666-666");
        personDoctor.setUserID("aditya@doctor");
        personDoctor.setEmailAddress("ak@gmail.com");
        personDoctor.setPassword("password");
        personDoctor.setCommunity("Roxbury");
        
        personPatient.setFirstName("Shubham");
        personPatient.setLastName("sapkal");
        personPatient.setDateOfBirth(new Date(01-01-2000));
        personPatient.setEmailAddress("ss@gmail.com");
        personPatient.setMobileNum("(999)999-9999");
        personPatient.setUserID("shubham@patient");
        personPatient.setPassword("password");
        personPatient.setRole("Patient");
        personPatient.setCommunity("Roxbury");
        
        
        Encounter encounter1 = encounterHistory.addEncounter();
        encounter1.setDoctorName("Aditya");
        encounter1.setUserID(personPatient.getUserID());
        
        encounter1.setEncounterDate(new Date(31-01-1998));
        encounter1.setSystole(100);
        encounter1.setDiastole(100);
        encounter1.setPreDiet(100);
        encounter1.setPostDiet(100);
        encounter1.setHeartRate(72);
        encounter1.setComments("Very Healthy condition");
        
        Encounter encounter2 = encounterHistory.addEncounter();
        encounter2.setDoctorName("Aditya");
        encounter2.setUserID(personPatient.getUserID());
        
        encounter2.setEncounterDate(new Date(31-01-2000));
        encounter2.setSystole(120);
        encounter2.setDiastole(80);
        encounter2.setPreDiet(110);
        encounter2.setPostDiet(160);
        encounter2.setHeartRate(70);
        encounter2.setComments("Improvement Needed");
        
        systemAdmin.setUserID("sysadmin@admin");
        systemAdmin.setPassword("password");
        systemAdmin.setRole("System Admin");
        systemAdmin.setFirstName("System");
        systemAdmin.setLastName("Admin");
        
        communityAdmin.setUserID("comadmin@admin");
        communityAdmin.setPassword("password");
        communityAdmin.setRole("Community Admin");
        communityAdmin.setFirstName("Community");
        communityAdmin.setLastName("Admin");
        
        hospitalAdmin.setUserID("hpadmin@admin");
        hospitalAdmin.setPassword("password");
        hospitalAdmin.setRole("Hospital Admin");
        hospitalAdmin.setFirstName("Hospital");
        hospitalAdmin.setLastName("Admin");
        
        hospital.setCity("Boston");
        hospital.setCommunity("Roxbury");
        hospital.setHospitalName("Brigham Hospital");
        
        hospitalB.setCity("Boston");
        hospitalB.setCommunity("Roxbury");
        hospitalB.setHospitalName("Gotham Hospital");
        
        
        City city = cityDirectory.addCity();
        City cityB = cityDirectory.addCity();
        
        Community community = communityDirectory.addCommunity();
        Community communityB = communityDirectory.addCommunity();
        
        House house = houseDirectory.addHouse();
        House houseB = houseDirectory.addHouse();
        
        city.setCity("Gotham");
        cityB.setCity("Boston");
        
        community.setCommunity("Arkham");
        community.setCity("Gotham");
        
        communityB.setCommunity("Bay");
        communityB.setCity("Boston");
        
        house.setHouse("J Vue Appartments");
        house.setCity("Boston");
        house.setCommunity("Bay");
        
        houseB.setHouse("75 ST Appartments");
        houseB.setCity("Boston");
        houseB.setCommunity("Bay");
        
        
        
 
    } 

}
